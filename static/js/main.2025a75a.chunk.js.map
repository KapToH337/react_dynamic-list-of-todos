{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","state","select","search","this","props","todos","userId","findUserId","filterUser","searchTodo","className","value","placeholder","onChange","event","setState","target","map","todo","key","id","completed","type","readOnly","checked","title","onClick","React","Component","CurrentUser","user","localeUser","prevProps","a","url","fetch","then","response","json","users","data","name","email","phone","clearUser","App","copy","selectedUserId","complete","filter","text","result","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2025a75a.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    select: '',\n    search: '',\n  }\n\n  render() {\n    const { todos, userId, findUserId, filterUser, searchTodo } = this.props;\n    const { select, search } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          value={search}\n          placeholder=\"search Title\"\n          onChange={(event) => {\n            this.setState({ search: event.target.value });\n            searchTodo(event.target.value);\n          }}\n        />\n\n        <select\n          value={select}\n          onChange={(event) => {\n            this.setState({ select: event.target.value });\n            filterUser(event.target.value);\n          }}\n        >\n          <option\n            value=\"\"\n          >\n            select\n          </option>\n\n          <option\n            value=\"all\"\n          >\n            all\n          </option>\n\n          <option\n            value=\"false\"\n          >\n            active\n          </option>\n\n          <option\n            value=\"true\"\n          >\n            completed\n          </option>\n        </select>\n\n        <h2>Todos:</h2>\n\n        {todos.map(todo => (\n          <div\n            className=\"TodoList__list-container\"\n            key={todo.id}\n          >\n            <ul className=\"TodoList__list\">\n              <li\n                className={`TodoList__item\n                  ${todo.completed\n                  ? 'TodoList__item--checked'\n                  : 'TodoList__item--unchecked'\n                  }\n                `}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={\n                      !!todo.completed\n                    }\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={\n                    `TodoList__user-button\n                    ${todo.userId === userId\n                      && 'TodoList__user-button--selected'\n                    }\n                    button`\n                  }\n                  type=\"button\"\n                  onClick={() => findUserId(todo.userId)}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.localeUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.localeUser();\n    }\n  }\n\n  async localeUser() {\n    getUser(this.props.userId)\n      .then((users) => {\n        this.setState({ user: users.data });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        {this.state.user !== null\n          ? (\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  Selected user:\n                  {user.id}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n              {this.props.userId !== 0 && (\n                <button\n                  className=\"\n                    TodoList__user-button\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => this.props.clearUser()}\n                >\n                  Clear\n                </button>\n              )}\n            </div>\n          )\n          : 'User not a found'\n        }\n      </>\n    );\n  }\n}\n","export const getTodos = () => (\n  fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json())\n);\n\nexport const getUser = url => (\n  fetch(`https://mate-api.herokuapp.com/users/${url}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    copy: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    getTodos().then((todos) => {\n      this.setState({\n        todos: todos.data, copy: todos.data,\n      });\n    });\n  }\n\n  findUserId = (userId) => {\n    if (this.state.selectedUserId === userId) {\n      return;\n    }\n\n    this.setState({ selectedUserId: userId });\n  }\n\n  filterUser = (complete) => {\n    const { copy } = this.state;\n\n    if (complete === 'all') {\n      this.setState({ todos: copy });\n    } else {\n      const filter = copy.filter(\n        todo => todo.completed === (complete === 'true'),\n      );\n\n      this.setState({ todos: filter });\n    }\n  }\n\n  searchTodo = (text) => {\n    const filter = this.state.copy.filter(todo => todo.title !== null && todo.title !== '')\n    const result = filter.filter(todo => todo.title.includes(text))\n\n    this.setState({ todos: result });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            userId={selectedUserId}\n            findUserId={this.findUserId}\n            filterUser={this.filterUser}\n            searchTodo={this.searchTodo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}